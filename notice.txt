zhu-ty-bbnc@10.8.5.216

for 18.04:
sudo add-apt-repository "deb http://security.ubuntu.com/ubuntu xenial-security main"
sudo apt update
sudo apt install libjasper1 libjasper-dev


setterm --blank 0 (poke?)


OpenCV Error: Unspecified error (The function is not implemented. Rebuild the library with Windows, GTK+ 2.x or Carbon support. If you are on Ubuntu or Debian, install libgtk2.0-dev and pkg-config, then re-run cmake or configure script) in cvShowImage

sudo apt-get install build-essential git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev libprotobuf-dev libleveldb-dev libsnappy-dev libhdf5-serial-dev protobuf-compiler libopenblas-dev liblapack-dev libatlas-base-dev libgflags-dev libgoogle-glog-dev liblmdb-dev libgtk2.0-dev pkg-config

sudo apt-get install --no-install-recommends libboost-all-dev

for opencv4.0.0 & ubuntu 18.04 & cuda10:

    Install Eigen first so that WITH_EIGEN will be enabled & we can then use BilateralSolver
    
    OpenCV 4.0+
    The basic data structures (GpuMat etc.) will stay in the main repository.
    Note:
    -DWITH_CUDA=ON requires -DOPENCV_EXTRA_MODULES_PATH=<opencv_contrib>/modules
    without contrib, build fails with missing "cudev" message
    
    Try cmake -DBUILD_opencv_cudacodec=OFF ....
    It is tested with CUDA <= 6.5 only.
    After that CUDA API is changed for decoding/encoding - updates are not supported yet.

    Also try to disable precopmiled headers (it is buggy in some configurations):

    cmake -DENABLE_PRECOMPILED_HEADERS=OFF ...

export PATH=/usr/local/cuda-9/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/usr/local/cuda-9/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

cd /usr/local/cuda-9/samples/1_Utilities/deviceQuerymakesudo ./deviceQuery

sudo vim /etc/systemd/system/network-online.targets.wants/networking.service
TimeoutStartSec=10sec

opencv video build option (use ccmake)
NO: test perf

https://www.ptgrey.com/KB/10942

For Linux usersâ€”Increase the usbfs memory limit to 1000 MB
To temporarily set the maximum usbfs memory limit, run this command:
$ sudo modprobe usbcore usbfs_memory_mb=0
To permanently set the maximum usbfs memory limit:Open the /etc/default/grub file in any text editor.
Find and replace:
GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"
with this:
GRUB_CMDLINE_LINUX_DEFAULT="quiet splash usbcore.usbfs_memory_mb=1000"
Update grub with these settings:
$ sudo update-grub
Reboot and test a USB 3.1 camera.



XIEMA install:

./install -cam_usb30


